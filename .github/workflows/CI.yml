name: CI
on:
  push:
    paths:
      - "src/**"
      - ".github/workflows/**"
  release:
    types:
      - published
  pull_request:
jobs:
  prepare_build_matrix:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
    steps:
      - name: Setup matrix data
        id: build-matrix
        run: |
          if ${{ contains(github.ref, '1.16') || contains(github.ref, '1.17')  || contains(github.ref, 'dev') }}; then
            echo "::set-output name=matrix::{\"java\":[16, 17], \"os\":[\"ubuntu-latest\"]}"
          else
            echo "::set-output name=matrix::{\"java\":[17], \"os\":[\"ubuntu-latest\"]}"
          fi
  build:
    if: ${{ github.event_name == 'push' }}
    needs:
      - prepare_build_matrix
    strategy:
      matrix: ${{ fromJSON(needs.prepare_build_matrix.outputs.matrix) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the sources
        uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Get short commit sha
        id: get_short_sha
        run: |
          short_sha=$(echo ${GITHUB_SHA} | cut -c1-7)
          echo "::set-output name=short_sha::$short_sha"
      - name: Set build number in codes
        run: |
          sed -i "s/Development/Public Beta/g" src/main/java/top/hendrixshen/TweakMyClient/TweakMyClientReference.java
      - name: Read relevant fields from gradle.properties
        id: properties
        run: |
          path='./gradle.properties'
          for property in mod_file_name mod_version minecraft_version_out
          do
            result=$(sed -n "/^[[:space:]]*$property[[:space:]]*=[[:space:]]*/s/^[[:space:]]*$property[[:space:]]*=[[:space:]]*//p" "$path")
            echo "$property: $result"
            echo ::set-output name=$property::"$result"
          done
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        env:
          GIT_COMMIT_ID: ${{ steps.get_short_sha.outputs.short_sha }}
        run: ./gradlew build
      - name: Publish maven with Gradle
        env:
          GIT_COMMIT_ID: ${{ steps.get_short_sha.outputs.short_sha }}
        run: ./gradlew publish
      - name: Upload assets to GitHub Action
        if: ${{ matrix.java == '17' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.properties.outputs.mod_file_name }}-mc${{ steps.properties.outputs.minecraft_version_out }}-${{ steps.properties.outputs.mod_version }}+${{ steps.get_short_sha.outputs.short_sha }}(Public Beta)
          path: build/libs/
      - name: Upload maven to GitHub Action
        if: ${{ matrix.java == '17' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.properties.outputs.mod_file_name }}-mc${{ steps.properties.outputs.minecraft_version_out }}-${{ steps.properties.outputs.mod_version }}+${{ steps.get_short_sha.outputs.short_sha }}(Maven)
          path: publish/
  publish:
    if: ${{ github.event_name == 'release' }}
    strategy:
      matrix:
        java: [16, 17]
        os: [ubuntu-latest]
        branch: [1.16, 1.17, 1.18]
        exclude:
          - java: 16
            os: ubuntu-latest
            branch: 1.18
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the sources
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branch }}
      - name: Get commit sha from the corresponding branch
        id: get_sha
        uses: mego22/actions-git-sha@main
        with:
          repo: "https://github.com/Hendrix-Shen/Tweak-My-Client"
          branch: "${{ matrix.branch }}"
      - name: Get short commit sha
        id: get_short_sha
        run: |
          short_sha=$(echo ${{ steps.get_sha.outputs.sha }} | cut -c1-7)
          echo "::set-output name=short_sha::$short_sha"
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Set build number in codes
        run: |
          sed -i "s/Development/Public Beta/g" src/main/java/top/hendrixshen/TweakMyClient/TweakMyClientReference.java
      - name: Read relevant fields from gradle.properties
        id: properties
        run: |
          path='./gradle.properties'
          for property in mod_file_name mod_version minecraft_version_out cruseforge_gameversion cruseforge_projectid cruseforge_relations cruseforge_release cruseforge_release_type github_release modrinth_release modrinth_release_type
          do
            result=$(sed -n "/^[[:space:]]*$property[[:space:]]*=[[:space:]]*/s/^[[:space:]]*$property[[:space:]]*=[[:space:]]*//p" "$path")
            echo "$property: $result"
            echo ::set-output name=$property::"$result"
          done
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        env:
          GIT_COMMIT_ID: ${{ steps.get_short_sha.outputs.short_sha }}
        run: ./gradlew build
      - name: Publish maven with Gradle
        env:
          GIT_COMMIT_ID: ${{ steps.get_short_sha.outputs.short_sha }}
        run: ./gradlew publish
      - name: Find correct jar
        id: findjar
        run: |
          output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*-sources.jar" -type f -printf "%f\n")"
          echo "::set-output name=jarname::$output"
      - name: Upload assets to GitHub Action
        if: ${{ matrix.java == '17' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.properties.outputs.mod_file_name }}-mc${{ steps.properties.outputs.minecraft_version_out }}-${{ steps.properties.outputs.mod_version }}+${{ steps.get_short_sha.outputs.short_sha }}(Public Release)
          path: build/libs/
      - name: Upload maven to GitHub Action
        if: ${{ matrix.java == '17' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.properties.outputs.mod_file_name }}-mc${{ steps.properties.outputs.minecraft_version_out }}-${{ steps.properties.outputs.mod_version }}+${{ steps.get_short_sha.outputs.short_sha }}(Maven)
          path: publish/
      - name: Upload assets to GitHub Release
        if: ${{ steps.properties.outputs.github_release == 'true' && matrix.java == '17' }}
        uses: AButler/upload-release-assets@v2.0
        with:
          files: 'build/libs/${{ steps.findjar.outputs.jarname }}'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload assets to Curseforge
        if: ${{ steps.properties.outputs.cruseforge_release == 'true' && matrix.java == '17' }}
        uses: itsmeow/curseforge-upload@v3
        with:
          token: ${{ secrets.CF_API_TOKEN }}
          project_id: ${{ steps.properties.outputs.cruseforge_projectid }}
          game_endpoint: minecraft
          file_path: build/libs/${{ steps.findjar.outputs.jarname }}
          changelog_type: markdown
          changelog: ${{ github.event.release.body }}
          game_versions: ${{ steps.properties.outputs.cruseforge_gameversion }}
          release_type: ${{ steps.properties.outputs.cruseforge_release_type }}
          relations: ${{ steps.properties.outputs.cruseforge_relations }}
      - name: Upload assets to Modrinth
        if: ${{ steps.properties.outputs.modrinth_release == 'true' && matrix.java == '17' }}
        run: ./gradlew publishModrinth
        env:
          CHANGE_LOG: ${{ github.event.release.body }}
          GIT_COMMIT_ID: ${{ steps.get_short_sha.outputs.short_sha }}
          MODRINTH_API_TOKEN: ${{ secrets.MODRINTH_API_TOKEN }}
          VERSION_NUMBER: ${{ steps.properties.outputs.mod_file_name }}-mc${{ steps.properties.outputs.minecraft_version_out }}-${{ steps.properties.outputs.mod_version }}+${{ steps.get_short_sha.outputs.short_sha }}
  pull_request:
    if: ${{ github.event_name == 'pull_request' }}
    strategy:
      matrix:
        java: [
            16,
            17
        ]
        os: [
            ubuntu-20.04
        ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the sources
        uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
