name: CI
on:
  push:
    paths:
      - "src/**"
      - ".github/workflows/**"
  release:
    types:
      - published
  pull_request:
jobs:
  build:
    if: ${{ github.event_name == 'push' }}
    strategy:
      matrix:
        java: [
          16
        ]
        os: [
          ubuntu-20.04
        ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the sources
        uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Set build number in codes
        run: |
          sed -i "s/build.undefined/build.$GITHUB_RUN_NUMBER/g" gradle.properties
          sed -i "s/Version Exception/Public Beta/g" src/main/java/top/hendrixshen/TweakMyClient/TweakMyClientReference.java
      - name: Read relevant fields from gradle.properties
        id: properties
        run: |
          path='./gradle.properties'
          for property in mod_file_name mod_version_detail mod_file_name minecraft_version_out
          do
            result=$(sed -n "/^[[:space:]]*$property[[:space:]]*=[[:space:]]*/s/^[[:space:]]*$property[[:space:]]*=[[:space:]]*//p" "$path")
            echo "$property: $result"
            echo ::set-output name=$property::"$result"
          done
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Publish maven with Gradle
        run: ./gradlew publish
      - name: Upload assets to GitHub Action
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.properties.outputs.mod_file_name }}-${{ steps.properties.outputs.mod_version_detail }}(Public Beta)
          path: build/libs/
      - name: Upload maven to GitHub Action
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.properties.outputs.mod_file_name }}-${{ steps.properties.outputs.mod_version_detail }}(Maven)
          path: publish/
  publish:
    if: ${{ github.event_name == 'release' }}
    strategy:
      matrix:
        java: [
          16
        ]
        os: [
          ubuntu-latest
        ]
        branch: [
          1.16,
          1.17,
          1.18
        ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the sources
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.getbranchinfo.outputs.branchname }}
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Set build number in codes
        run: |
          sed -i "s/build.undefined/build.$GITHUB_RUN_NUMBER/g" gradle.properties
          sed -i "s/Version Exception/Public Beta/g" src/main/java/top/hendrixshen/TweakMyClient/TweakMyClientReference.java
      - name: Read relevant fields from gradle.properties
        id: properties
        run: |
          path='./gradle.properties'
          for property in mod_file_name mod_version_detail mod_file_name minecraft_version_out cruseforge_gameversion cruseforge_projectid cruseforge_relations cruseforge_release cruseforge_release_type github_release modrinth_release modrinth_release_type
          do
            result=$(sed -n "/^[[:space:]]*$property[[:space:]]*=[[:space:]]*/s/^[[:space:]]*$property[[:space:]]*=[[:space:]]*//p" "$path")
            echo "$property: $result"
            echo ::set-output name=$property::"$result"
          done
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Publish maven with Gradle
        run: ./gradlew publish
      - name: Find correct jar
        id: findjar
        run: |
          output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*-sources.jar" -type f -printf "%f\n")"
          echo "::set-output name=jarname::$output"
      - name: Upload assets to GitHub Action
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.properties.outputs.mod_file_name }}-${{ steps.properties.outputs.mod_version_detail }}(Public Release)
          path: build/libs/
      - name: Upload maven to GitHub Action
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.properties.outputs.mod_file_name }}-${{ steps.properties.outputs.mod_version_detail }}(Maven)
          path: publish/
      - name: Upload assets to GitHub Release
        if: ${{ steps.properties.outputs.github_release == 'true' }}
        uses: AButler/upload-release-assets@v2.0
        with:
          files: 'build/libs/${{ steps.findjar.outputs.jarname }}'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload assets to Curseforge
        if: ${{ steps.properties.outputs.cruseforge_release == 'true' }}
        uses: itsmeow/curseforge-upload@v3
        with:
          token: ${{ secrets.CF_API_TOKEN }}
          project_id: ${{ steps.properties.outputs.cruseforge_projectid }}
          game_endpoint: minecraft
          file_path: build/libs/${{ steps.findjar.outputs.jarname }}
          changelog_type: markdown
          changelog: ${{ github.event.release.body }}
          game_versions: ${{ steps.properties.outputs.cruseforge_gameversion }}
          release_type: ${{ steps.properties.outputs.cruseforge_release_type }}
          relations: ${{ steps.properties.outputs.cruseforge_relations }}
      - name: Upload assets to Modrinth
        if: ${{ steps.properties.outputs.modrinth_release == 'true' }}
        run: ./gradlew publishModrinth
        env:
          CHANGE_LOG: ${{ github.event.release.body }}
          MODRINTH_API_TOKEN: ${{ secrets.MODRINTH_API_TOKEN }}
          VERSION_NUMBER: ${{ steps.properties.outputs.mod_file_name }}-mc${{ steps.properties.outputs.minecraft_version_out }}-${{ steps.properties.outputs.mod_version_detail }}
  pull_request:
    if: ${{ github.event_name == 'pull_request' }}
    strategy:
      matrix:
        java: [
          16
        ]
        os: [
          ubuntu-20.04
        ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the sources
        uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
